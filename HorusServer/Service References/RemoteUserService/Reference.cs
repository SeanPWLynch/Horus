//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HorusServer.RemoteUserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteUserService.IClientSideService")]
    public interface IClientSideService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/GetHostName", ReplyAction="http://tempuri.org/IClientSideService/GetHostNameResponse")]
        string GetHostName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/GetHostName", ReplyAction="http://tempuri.org/IClientSideService/GetHostNameResponse")]
        System.Threading.Tasks.Task<string> GetHostNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/GetComputer", ReplyAction="http://tempuri.org/IClientSideService/GetComputerResponse")]
        HorusShared.ComputerObjects.Computer GetComputer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/GetComputer", ReplyAction="http://tempuri.org/IClientSideService/GetComputerResponse")]
        System.Threading.Tasks.Task<HorusShared.ComputerObjects.Computer> GetComputerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/Ping", ReplyAction="http://tempuri.org/IClientSideService/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/Ping", ReplyAction="http://tempuri.org/IClientSideService/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/StartProcess", ReplyAction="http://tempuri.org/IClientSideService/StartProcessResponse")]
        void StartProcess(string ProcessName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/StartProcess", ReplyAction="http://tempuri.org/IClientSideService/StartProcessResponse")]
        System.Threading.Tasks.Task StartProcessAsync(string ProcessName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/EndProcess", ReplyAction="http://tempuri.org/IClientSideService/EndProcessResponse")]
        void EndProcess(string ProcessName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientSideService/EndProcess", ReplyAction="http://tempuri.org/IClientSideService/EndProcessResponse")]
        System.Threading.Tasks.Task EndProcessAsync(string ProcessName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientSideServiceChannel : HorusServer.RemoteUserService.IClientSideService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientSideServiceClient : System.ServiceModel.ClientBase<HorusServer.RemoteUserService.IClientSideService>, HorusServer.RemoteUserService.IClientSideService {
        
        public ClientSideServiceClient() {
        }
        
        public ClientSideServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientSideServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientSideServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientSideServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetHostName() {
            return base.Channel.GetHostName();
        }
        
        public System.Threading.Tasks.Task<string> GetHostNameAsync() {
            return base.Channel.GetHostNameAsync();
        }
        
        public HorusShared.ComputerObjects.Computer GetComputer() {
            return base.Channel.GetComputer();
        }
        
        public System.Threading.Tasks.Task<HorusShared.ComputerObjects.Computer> GetComputerAsync() {
            return base.Channel.GetComputerAsync();
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
        
        public void StartProcess(string ProcessName) {
            base.Channel.StartProcess(ProcessName);
        }
        
        public System.Threading.Tasks.Task StartProcessAsync(string ProcessName) {
            return base.Channel.StartProcessAsync(ProcessName);
        }
        
        public void EndProcess(string ProcessName) {
            base.Channel.EndProcess(ProcessName);
        }
        
        public System.Threading.Tasks.Task EndProcessAsync(string ProcessName) {
            return base.Channel.EndProcessAsync(ProcessName);
        }
    }
}
