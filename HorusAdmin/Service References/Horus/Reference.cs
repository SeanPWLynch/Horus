//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HorusAdmin.Horus {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Computer", Namespace="http://schemas.datacontract.org/2004/07/HorusShared.ComputerObjects")]
    [System.SerializableAttribute()]
    public partial class Computer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPUManField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPUNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CPUNumLogicalCoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CPUNumPhysicalCoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan SystemUpTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPUID {
            get {
                return this.CPUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CPUIDField, value) != true)) {
                    this.CPUIDField = value;
                    this.RaisePropertyChanged("CPUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPUMan {
            get {
                return this.CPUManField;
            }
            set {
                if ((object.ReferenceEquals(this.CPUManField, value) != true)) {
                    this.CPUManField = value;
                    this.RaisePropertyChanged("CPUMan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPUName {
            get {
                return this.CPUNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CPUNameField, value) != true)) {
                    this.CPUNameField = value;
                    this.RaisePropertyChanged("CPUName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CPUNumLogicalCores {
            get {
                return this.CPUNumLogicalCoresField;
            }
            set {
                if ((this.CPUNumLogicalCoresField.Equals(value) != true)) {
                    this.CPUNumLogicalCoresField = value;
                    this.RaisePropertyChanged("CPUNumLogicalCores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CPUNumPhysicalCores {
            get {
                return this.CPUNumPhysicalCoresField;
            }
            set {
                if ((this.CPUNumPhysicalCoresField.Equals(value) != true)) {
                    this.CPUNumPhysicalCoresField = value;
                    this.RaisePropertyChanged("CPUNumPhysicalCores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan SystemUpTime {
            get {
                return this.SystemUpTimeField;
            }
            set {
                if ((this.SystemUpTimeField.Equals(value) != true)) {
                    this.SystemUpTimeField = value;
                    this.RaisePropertyChanged("SystemUpTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Horus.IServerAdminService")]
    public interface IServerAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAdminService/GetClients", ReplyAction="http://tempuri.org/IServerAdminService/GetClientsResponse")]
        string[] GetClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAdminService/GetClients", ReplyAction="http://tempuri.org/IServerAdminService/GetClientsResponse")]
        System.Threading.Tasks.Task<string[]> GetClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAdminService/GetHostName", ReplyAction="http://tempuri.org/IServerAdminService/GetHostNameResponse")]
        string GetHostName(string targetMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAdminService/GetHostName", ReplyAction="http://tempuri.org/IServerAdminService/GetHostNameResponse")]
        System.Threading.Tasks.Task<string> GetHostNameAsync(string targetMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAdminService/GetComputer", ReplyAction="http://tempuri.org/IServerAdminService/GetComputerResponse")]
        HorusAdmin.Horus.Computer GetComputer(string targetMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerAdminService/GetComputer", ReplyAction="http://tempuri.org/IServerAdminService/GetComputerResponse")]
        System.Threading.Tasks.Task<HorusAdmin.Horus.Computer> GetComputerAsync(string targetMachine);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerAdminServiceChannel : HorusAdmin.Horus.IServerAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerAdminServiceClient : System.ServiceModel.ClientBase<HorusAdmin.Horus.IServerAdminService>, HorusAdmin.Horus.IServerAdminService {
        
        public ServerAdminServiceClient() {
        }
        
        public ServerAdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerAdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerAdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerAdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetClients() {
            return base.Channel.GetClients();
        }
        
        public System.Threading.Tasks.Task<string[]> GetClientsAsync() {
            return base.Channel.GetClientsAsync();
        }
        
        public string GetHostName(string targetMachine) {
            return base.Channel.GetHostName(targetMachine);
        }
        
        public System.Threading.Tasks.Task<string> GetHostNameAsync(string targetMachine) {
            return base.Channel.GetHostNameAsync(targetMachine);
        }
        
        public HorusAdmin.Horus.Computer GetComputer(string targetMachine) {
            return base.Channel.GetComputer(targetMachine);
        }
        
        public System.Threading.Tasks.Task<HorusAdmin.Horus.Computer> GetComputerAsync(string targetMachine) {
            return base.Channel.GetComputerAsync(targetMachine);
        }
    }
}
