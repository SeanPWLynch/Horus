//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HorusClient.HorusServerClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceController", Namespace="http://schemas.datacontract.org/2004/07/System.ServiceProcess")]
    [System.SerializableAttribute()]
    public partial class ServiceController : System.ComponentModel.Component, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HorusClient.HorusServerClient.ServiceController[] DependentServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HorusClient.HorusServerClient.ServiceController[] ServicesDependedOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HorusClient.HorusServerClient.ServiceController[] DependentServices {
            get {
                return this.DependentServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.DependentServicesField, value) != true)) {
                    this.DependentServicesField = value;
                    this.RaisePropertyChanged("DependentServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName {
            get {
                return this.MachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineNameField, value) != true)) {
                    this.MachineNameField = value;
                    this.RaisePropertyChanged("MachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HorusClient.HorusServerClient.ServiceController[] ServicesDependedOn {
            get {
                return this.ServicesDependedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesDependedOnField, value) != true)) {
                    this.ServicesDependedOnField = value;
                    this.RaisePropertyChanged("ServicesDependedOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HorusServerClient.IServerClientService")]
    public interface IServerClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerClientService/GetHostName", ReplyAction="http://tempuri.org/IServerClientService/GetHostNameResponse")]
        string GetHostName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerClientService/GetHostName", ReplyAction="http://tempuri.org/IServerClientService/GetHostNameResponse")]
        System.Threading.Tasks.Task<string> GetHostNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerClientService/HandShake", ReplyAction="http://tempuri.org/IServerClientService/HandShakeResponse")]
        void HandShake(string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerClientService/HandShake", ReplyAction="http://tempuri.org/IServerClientService/HandShakeResponse")]
        System.Threading.Tasks.Task HandShakeAsync(string hostName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerClientService/RecieveComputer", ReplyAction="http://tempuri.org/IServerClientService/RecieveComputerResponse")]
        void RecieveComputer(HorusShared.ComputerObjects.Computer System);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerClientService/RecieveComputer", ReplyAction="http://tempuri.org/IServerClientService/RecieveComputerResponse")]
        System.Threading.Tasks.Task RecieveComputerAsync(HorusShared.ComputerObjects.Computer System);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerClientService/GetComputer", ReplyAction="http://tempuri.org/IServerClientService/GetComputerResponse")]
        HorusShared.ComputerObjects.Computer GetComputer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerClientService/GetComputer", ReplyAction="http://tempuri.org/IServerClientService/GetComputerResponse")]
        System.Threading.Tasks.Task<HorusShared.ComputerObjects.Computer> GetComputerAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerClientServiceChannel : HorusClient.HorusServerClient.IServerClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerClientServiceClient : System.ServiceModel.ClientBase<HorusClient.HorusServerClient.IServerClientService>, HorusClient.HorusServerClient.IServerClientService {
        
        public ServerClientServiceClient() {
        }
        
        public ServerClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetHostName() {
            return base.Channel.GetHostName();
        }
        
        public System.Threading.Tasks.Task<string> GetHostNameAsync() {
            return base.Channel.GetHostNameAsync();
        }
        
        public void HandShake(string hostName) {
            base.Channel.HandShake(hostName);
        }
        
        public System.Threading.Tasks.Task HandShakeAsync(string hostName) {
            return base.Channel.HandShakeAsync(hostName);
        }
        
        public void RecieveComputer(HorusShared.ComputerObjects.Computer System) {
            base.Channel.RecieveComputer(System);
        }
        
        public System.Threading.Tasks.Task RecieveComputerAsync(HorusShared.ComputerObjects.Computer System) {
            return base.Channel.RecieveComputerAsync(System);
        }
        
        public HorusShared.ComputerObjects.Computer GetComputer() {
            return base.Channel.GetComputer();
        }
        
        public System.Threading.Tasks.Task<HorusShared.ComputerObjects.Computer> GetComputerAsync() {
            return base.Channel.GetComputerAsync();
        }
    }
}
